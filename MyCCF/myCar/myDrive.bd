classType myCar.myDrive
blockdiagramSpecification Main {
	methodBody move {
		outPin active {
			connection_29, connection_81, connection_56, connection_91, connection_2, connection_48, connection_36, connection_100, connection_152, connection_178, connection_184, connection_182, connection_181, connection_186, connection_190, connection_192, connection_195
		}
	}
	simpleIdentifier BrakeMomentum at (181, 31) {
		label at (0, 1)
		inPin connection_6
		outPin {
			connection_10
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier move.brakeCtrl at (31, 45) {
		label at (0, -1)
		outPin {
			connection_6
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	addition at (451, 46) size (2, 5) {
		inPin connection_10
		inPin connection_4 {
			bendpoints (20, 0), (20, -50)
		}
		inPin connection_42 {
			bendpoints (170, 0), (170, -120)
		}
		inPin connection_155 {
			bendpoints (30, 0), (30, -190)
		}
		inPin connection_154 {
			bendpoints (20, 0), (20, -250)
		}
		outPin {
			connection_26
		}
	}
	simpleIdentifier EngineMomentum at (191, 91) {
		label at (10, 1)
		inPin connection_194
		inPin connection_102 {
			bendpoints (80, 0), (80, -40)
		}
		outPin {
			connection_101
		}
		sequenceCall {
			inPin
		}
	}
	multiplication at (601, 66) size (2, 3) {
		inPin connection_26
		inPin connection_28
		outPin {
			connection_31
		}
	}
	simpleIdentifier momentum at (331, 105) {
		label at (0, -1)
		inPin connection_101
		outPin {
			connection_4
		}
		sequenceCall at (0, -14) {
			inPin connection_100
		}
	}
	simpleIdentifier v at (781, 85) {
		label at (20, -1)
		inPin connection_30
		outPin {
			connection_27
		}
		sequenceCall at (-10, -14) {
			inPin connection_29
		}
	}
	addition at (681, 76) {
		inPin connection_31
		inPin connection_27 {
			bendpoints (40, 0), (40, 40), (-160, 40), (-160, 10)
		}
		outPin {
			connection_30
		}
	}
	simpleIdentifier AirFriction at (191, 171) {
		label at (0, 1)
		inPin connection_103 {
			bendpoints (80, 0), (80, 30)
		}
		outPin {
			connection_42
		}
		sequenceCall {
			inPin
		}
	}
	multiplication at (381, 326) {
		inPin connection_55
		inPin connection_51 {
			bendpoints (10, 0), (10, -30)
		}
		outPin {
			connection_154
		}
	}
	simpleIdentifier h at (21, 355) {
		label at (20, -1)
		inPin outPin {
			connection_47
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	simpleIdentifier dh at (241, 365) {
		label at (10, -1)
		inPin connection_49
		outPin {
			connection_46
		}
		sequenceCall at (0, -14) {
			inPin connection_48
		}
	}
	subtraction at (191, 356) {
		inPin connection_47
		inPin connection_35 {
			bendpoints (10, 0), (10, -40)
		}
		outPin {
			connection_49
		}
	}
	division at (321, 366) {
		inPin connection_46
		inPin connection_45 {
			bendpoints (40, 0), (40, -100)
		}
		outPin {
			connection_51
		}
	}
	simpleIdentifier Landscape at (101, 401) {
		label at (0, 1)
		inPin connection_25 {
			bendpoints (10, 0)
		}
		outPin {
			connection_37, connection_35
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier dist at (21, 415) {
		label at (20, -1)
		inPin outPin {
			connection_25
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	simpleIdentifier h at (221, 415) {
		label at (20, -1)
		inPin connection_37
		outPin sequenceCall at (0, -14) {
			inPin connection_36
		}
	}
	simpleIdentifier v at (21, 475) {
		label at (20, -1)
		inPin outPin {
			connection_14
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	simpleIdentifier ds at (221, 485) {
		label at (10, -1)
		inPin connection_57
		outPin {
			connection_45, connection_44
		}
		sequenceCall at (-10, -14) {
			inPin connection_56
		}
	}
	simpleIdentifier dist at (391, 495) {
		label at (20, -1)
		inPin connection_17
		outPin {
			connection_13
		}
		sequenceCall at (-10, -14) {
			inPin connection_16 {
				bendpoints (120, 0), (120, 70), (-420, 70), (-420, 180)
			}
		}
	}
	multiplication at (131, 476) {
		inPin connection_14
		inPin connection_5 {
			bendpoints (50, 0), (50, -20)
		}
		outPin {
			connection_57
		}
	}
	addition at (321, 486) {
		inPin connection_44
		inPin connection_13 {
			bendpoints (20, 0), (20, 40), (-130, 40), (-130, 10)
		}
		outPin {
			connection_196, connection_17
		}
	}
	simpleIdentifier dist at (531, 405) {
		label at (20, -1)
		inPin outPin {
			connection_78
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	greater at (661, 406) {
		inPin connection_78
		inPin connection_20 {
			bendpoints (10, 0), (10, -10)
		}
		outPin {
			connection_19
		}
	}
	if at (741, 411) {
		inPin connection_19
		ifControlFlowOutPin {
			connection_53
		}
		sequenceCall at (-20, -14) {
			inPin connection_2
		}
	}
	literal unit resources.m "0.0" at (811, 423) size (49, 0) {
		outPin {
			connection_24
		}
	}
	simpleIdentifier TrackSize at (581, 435) {
		label at (0, -1)
		outPin {
			connection_20
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	simpleIdentifier dist at (871, 425) {
		label at (20, -1)
		inPin connection_24 {
			bendpoints (10, 0)
		}
		outPin sequenceCall at (-10, -14) {
			inPin connection_53
		}
	}
	methodArgumentIdentifier move.mydt at (531, 85) {
		label at (-20, 9)
		outPin {
			connection_28
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier move.mydt at (21, 515) {
		label at (0, -1)
		outPin {
			connection_5
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier move.myg at (281, 325) {
		label at (0, -1)
		outPin {
			connection_55
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier v at (551, 195) {
		label at (20, -1)
		inPin outPin {
			connection_79
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	literal unit resources.kmh "0.0" at (561, 243) size (49, 0) {
		outPin {
			connection_84, connection_80
		}
	}
	less at (681, 196) {
		inPin connection_79
		inPin connection_80 {
			bendpoints (20, 0), (20, -30)
		}
		outPin {
			connection_82
		}
	}
	if at (761, 201) {
		inPin connection_82
		ifControlFlowOutPin {
			connection_83
		}
		sequenceCall {
			inPin connection_81
		}
	}
	simpleIdentifier v at (881, 245) {
		label at (20, -1)
		inPin connection_84
		outPin sequenceCall at (-10, -14) {
			inPin connection_83 {
				bendpoints (50, 0), (50, 30)
			}
		}
	}
	simpleIdentifier ds at (561, 295) {
		label at (10, -1)
		inPin outPin {
			connection_85
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	greater at (671, 296) {
		inPin connection_85
		inPin connection_86 {
			bendpoints (30, 0), (30, -20)
		}
		outPin {
			connection_92
		}
	}
	literal unit resources.m "0.001" at (571, 333) size (49, 0) {
		outPin {
			connection_90, connection_86
		}
	}
	simpleIdentifier ds at (841, 345) {
		label at (10, -1)
		inPin connection_90 {
			bendpoints (30, 0), (30, 10)
		}
		outPin sequenceCall at (0, -14) {
			inPin connection_89
		}
	}
	ifElse at (741, 301) {
		inPin connection_92
		ifControlFlowOutPin {
			connection_16
		}
		elseControlFlowOutPin {
			connection_89
		}
		sequenceCall {
			inPin connection_91
		}
	}
	simpleIdentifier v at (31, 155) {
		label at (0, -1)
		inPin outPin {
			connection_103, connection_149, connection_102
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier myBattery_instance at (221, 561) size (14, 8) {
		label at (0, 1)
		methodCall myCar.myBattery.get_battery {
			argumentPin momentum at (left, 0) connection_156
			argumentPin ds at (left, 3) connection_143
			returnPin at (right, 0) {
				connection_179
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier momentum at (81, 555) {
		label at (0, -1)
		inPin outPin {
			connection_157
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier ds at (141, 595) {
		label at (0, -1)
		inPin outPin {
			connection_143
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier battery at (411, 565) {
		label at (0, -1)
		inPin connection_179
		outPin {
			connection_185
		}
		sequenceCall {
			inPin connection_178
		}
	}
	methodArgumentIdentifier move.recupCtrl at (101, 285) {
		label at (0, -1)
		outPin {
			connection_147
		}
		sequenceCall {
			inPin
		}
	}
	literal Numeric "100.0" at (111, 313) size (49, 0) {
		outPin {
			connection_146
		}
	}
	division at (181, 286) {
		inPin connection_147
		inPin connection_146 {
			bendpoints (10, 0), (10, -10)
		}
		outPin {
			connection_151
		}
	}
	simpleIdentifier curve_brake_recuperation_table at (191, 221) {
		label at (-190, 1)
		inPin connection_149 {
			bendpoints (80, 0), (80, 80)
		}
		outPin {
			connection_150
		}
		sequenceCall {
			inPin
		}
	}
	multiplication at (291, 256) size (2, 5) {
		inPin connection_150 {
			bendpoints (20, 0), (20, 20)
		}
		inPin connection_151 {
			bendpoints (50, 0), (50, -20)
		}
		inPin connection_176 {
			bendpoints (20, 0)
		}
		outPin {
			connection_153
		}
	}
	simpleIdentifier recup_momentum at (351, 265) {
		label at (-30, 9)
		inPin connection_153 {
			bendpoints (20, 0)
		}
		outPin {
			connection_155
		}
		sequenceCall {
			inPin connection_152
		}
	}
	addition at (151, 556) {
		inPin connection_157
		inPin connection_158
		outPin {
			connection_156
		}
	}
	simpleIdentifier recup_momentum at (31, 575) {
		label at (0, -1)
		inPin outPin {
			connection_158
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier noRecupPossible at (731, 505) {
		label at (0, -1)
		inPin connection_191 {
			bendpoints (30, 0), (30, -30)
		}
		outPin sequenceCall at (-10, -14) {
			inPin connection_190
		}
	}
	simpleIdentifier recupMult at (731, 565) {
		label at (0, 9)
		inPin connection_187
		outPin sequenceCall at (-10, -14) {
			inPin connection_186
		}
	}
	simpleIdentifier recupMult at (221, 315) {
		label at (-20, -1)
		inPin outPin {
			connection_176
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier BatteryState_instance at (531, 531) size (14, 8) {
		label at (0, 1)
		methodCall myCar.BatteryState.batteryStateStatemachineTrigger {
			methodVoidPin at (top, 0) sequenceCall at (16, -40) {
				inPin connection_181
			}
		}
		elementCall (myCar.BatteryState.noRecupPossible) {
			returnPin at (right, 0) {
				connection_191
			}
			sequenceCall {
				inPin
			}
		}
		elementCall (myCar.BatteryState.recupMult) {
			returnPin at (right, 3) {
				connection_187
			}
			sequenceCall {
				inPin
			}
		}
		elementCall (myCar.BatteryState.powerOverride) {
			returnPin at (right, 5) {
				connection_193
			}
			sequenceCall {
				inPin
			}
		}
		elementCall (myCar.BatteryState.powerInput) {
			argumentPin at (left, 0) connection_183 {
				bendpoints (30, 0), (30, 80)
			}
			sequenceCall at (-20, -34) {
				inPin connection_182
			}
		}
		elementCall (myCar.BatteryState.battery) {
			argumentPin at (left, 3) connection_185
			sequenceCall at (-40, 6) {
				inPin connection_184
			}
		}
	}
	methodArgumentIdentifier move.powerCtrl at (421, 455) {
		label at (0, -1)
		outPin {
			connection_183
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier power at (731, 615) {
		label at (0, -1)
		inPin connection_193 {
			bendpoints (30, 0), (30, 30)
		}
		outPin sequenceCall at (-10, -14) {
			inPin connection_192
		}
	}
	simpleIdentifier power at (31, 95) {
		label at (0, -1)
		inPin outPin {
			connection_194
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier totalDist at (371, 515) {
		label at (0, -1)
		inPin connection_196 {
			bendpoints (10, 0)
		}
		outPin sequenceCall {
			inPin connection_195
		}
	}
}